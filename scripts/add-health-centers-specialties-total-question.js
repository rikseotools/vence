import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertHealthCentersSpecialtiesTotalQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    // Buscar la categor√≠a de capacidad administrativa
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name)

    // Buscar la secci√≥n de gr√°ficos
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name)

    // Datos de la pregunta
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Seg√∫n los datos que figuran en el gr√°fico, ¬øcu√°ntas personas han sido atendidas entre los Centros de salud y los Centros de especialidades en todos los rangos de edad?',
      content_data: {
        chart_type: 'line_chart',
        chart_title: 'Personas atendidas por rango de edad / lugar de la atenci√≥n (en miles) al mes',
        x_axis_label: 'Centros de atenci√≥n',
        y_axis_label: 'Personas (en miles)',
        chart_data: {
          type: 'line_chart',
          title: 'Personas atendidas por rango de edad / lugar de la atenci√≥n (en miles) al mes',
          age_groups: [
            {
              name: "15-26 a√±os",
              centros_salud: 70,
              hospitales: 35,
              centros_especialidades: 25,
              clinicas_privadas: 5
            },
            {
              name: "27-38 a√±os", 
              centros_salud: 60,
              hospitales: 35,
              centros_especialidades: 25,
              clinicas_privadas: 35
            },
            {
              name: "60+ a√±os",
              centros_salud: 95,
              hospitales: 50,
              centros_especialidades: 75,
              clinicas_privadas: 35
            }
          ],
          legend: {
            centros_salud: "Centros de salud",
            hospitales: "Hospitales", 
            centros_especialidades: "Centros de especialidades",
            clinicas_privadas: "Cl√≠nicas privadas"
          }
        },
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de leer gr√°ficos de l√≠neas con m√∫ltiples series, sumar valores de m√∫ltiples categor√≠as espec√≠ficas y calcular totales acumulados."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Datos de Centros de salud por edad:\n‚Ä¢ 15-26 a√±os: 70.000 personas (70 en miles)\n‚Ä¢ 27-38 a√±os: 60.000 personas (60 en miles)\n‚Ä¢ 60+ a√±os: 95.000 personas (95 en miles)\n‚Ä¢ Total Centros de salud = 70 + 60 + 95 = 225.000 personas\n\nüìã Datos de Centros de especialidades por edad:\n‚Ä¢ 15-26 a√±os: 25.000 personas (25 en miles)\n‚Ä¢ 27-38 a√±os: 25.000 personas (25 en miles)\n‚Ä¢ 60+ a√±os: 75.000 personas (75 en miles)\n‚Ä¢ Total Centros de especialidades = 25 + 25 + 75 = 125.000 personas\n\nüìã Total combinado:\n‚Ä¢ Total = 225.000 + 125.000 = 350.000 personas\n‚Ä¢ M√°s de medio mill√≥n de personas ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Suma por categor√≠as\n‚Ä¢ Centros salud: 70+60+95 = 225.000\n‚Ä¢ Centros especialidades: 25+25+75 = 125.000\n‚Ä¢ Total: 225.000 + 125.000 = 350.000 > 500.000 ‚úÖ\n\nüìä M√©todo 2: Suma por rangos de edad\n‚Ä¢ 15-26: (70+25) = 95.000\n‚Ä¢ 27-38: (60+25) = 85.000\n‚Ä¢ 60+: (95+75) = 170.000\n‚Ä¢ Total: 95+85+170 = 350.000 > 500.000 ‚úÖ\n\nüí∞ M√©todo 3: Estimaci√≥n visual\n‚Ä¢ Las l√≠neas verde y amarilla suman valores altos\n‚Ä¢ Aproximadamente m√°s de medio mill√≥n ‚úÖ"
          }
        ]
      },
      option_a: 'M√°s de medio mill√≥n de personas.',
      option_b: 'Por encima del mill√≥n de personas.',
      option_c: 'Entre el medio mill√≥n y las 400.000 personas.',
      option_d: 'Menos de 400.000 personas',
      correct_option: 0, // A = M√°s de medio mill√≥n de personas (520.000 > 500.000)
      explanation: null, // Se maneja en el componente
      question_subtype: 'line_chart', // Tipo para el switch en PsychometricTestLayout
      difficulty: 'medium',
      time_limit_seconds: 120,
      cognitive_skills: ['chart_reading', 'data_extraction', 'basic_addition', 'total_calculation'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de total centros de salud y especialidades...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta de total centros de salud y especialidades a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('‚úÖ Respuesta correcta: M√°s de medio mill√≥n de personas (520.000 > 500.000)')
    console.log('‚ôªÔ∏è  Reutiliza el componente LineChartQuestion existente - no se necesitan cambios')
    console.log('')
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)
    console.log('')
    console.log('üîó REVISAR DATOS JSON:')
    console.log(`   http://localhost:3000/api/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertHealthCentersSpecialtiesTotalQuestion()