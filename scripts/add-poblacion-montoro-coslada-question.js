import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://yqbpstxowvgipqspqrgo.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxYnBzdHhvd3ZnaXBxc3BxcmdvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDg3NjcwMywiZXhwIjoyMDY2NDUyNzAzfQ.4yUKsfS-enlY6iGICFkKi-HPqNUyTkHczUqc5kgQB3w'
);

async function addPoblacionMontoroCosladaQuestion() {
  try {
    console.log('üîç Buscando categor√≠a y secci√≥n...');
    
    // 1. Buscar la categor√≠a 'capacidad-administrativa'
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('id, category_key, display_name')
      .eq('category_key', 'capacidad-administrativa')
      .single();

    if (categoryError || !category) {
      console.error('‚ùå Error al buscar categor√≠a:', categoryError);
      return;
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name);

    // 2. Buscar la secci√≥n 'tablas' dentro de la categor√≠a
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('id, section_key, display_name')
      .eq('category_id', category.id)
      .eq('section_key', 'tablas')
      .single();

    if (sectionError || !section) {
      console.error('‚ùå Error al buscar secci√≥n:', sectionError);
      return;
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name);

    // 3. Datos de la pregunta espec√≠fica de poblaci√≥n Montoro + Coslada 2019
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: '¬øQu√© poblaci√≥n tendremos si sumamos el n√∫mero de habitantes del 2019 de los municipios de Montoro y Coslada?',
      content_data: {
        chart_type: 'data_tables',
        chart_title: 'DATOS DE POBLACI√ìN EN MUNICIPIOS Y CCAA DE ESPA√ëA',
        question_context: '¬øQu√© poblaci√≥n tendremos si sumamos el n√∫mero de habitantes del 2019 de los municipios de Montoro y Coslada?',
        tables: [
          {
            title: 'Datos de poblaci√≥n en municipios y CCAA de Espa√±a',
            headers: ['Municipios', 'N¬∫ hab. 2020', 'N¬∫ hab. 2019', 'Diferen. (-)', 'CCAA pertenece', 'Poblaci√≥n de la CCAA'],
            rows: [
              ['Medina del Campo', '20416', '20510', '94', 'Castilla y Le√≥n', '2.383.702'],
              ['Coslada', '81391', '81661', '270', 'C. de Madrid', '6.917.111'],
              ['Muros', '8427', '8556', '129', 'Galicia', '2.699.938'],
              ['Montoro', '9293', '9364', '71', 'Andaluc√≠a', '8.600.224'],
              ['Membrilla', '5942', '6005', '63', 'Castilla La Mancha', '2.069.074']
            ],
            highlighted_rows: [1, 3], // Resaltar filas de Coslada y Montoro (√≠ndices 1, 3)
            highlighted_columns: [0, 2], // Resaltar columnas Municipios y N¬∫ hab. 2019
            source: 'Fuente parcial: INE'
          }
        ],
        operation_type: 'simple_addition',
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de localizaci√≥n de datos espec√≠ficos en tabla y realizaci√≥n de operaciones aritm√©ticas b√°sicas. Eval√∫a la precisi√≥n en la identificaci√≥n de filas y columnas correctas."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üîç PASO 1: Identificar municipios objetivo\n‚Ä¢ Localizar fila de 'Montoro'\n‚Ä¢ Localizar fila de 'Coslada'\n\nüìã PASO 2: Seleccionar columna correcta\n‚Ä¢ La pregunta pide datos del a√±o 2019\n‚Ä¢ Usar columna 'N¬∫ hab. 2019' (no 2020)\n\nüí° PASO 3: Extraer valores exactos\n‚Ä¢ Montoro 2019: 9.364 habitantes\n‚Ä¢ Coslada 2019: 81.661 habitantes\n\nüî¢ PASO 4: Realizar suma\n‚Ä¢ 9.364 + 81.661 = 91.025 habitantes"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Localizaci√≥n visual\n‚Ä¢ Buscar nombres espec√≠ficos en primera columna\n‚Ä¢ Seguir fila hasta columna '2019'\n‚Ä¢ Extraer valores exactos\n\nüìä M√©todo 2: C√°lculo mental r√°pido\n‚Ä¢ 9.364 ‚âà 9.400 (redondeo)\n‚Ä¢ 81.661 ‚âà 81.700 (redondeo)\n‚Ä¢ 9.400 + 81.700 = 91.100\n‚Ä¢ Buscar opci√≥n m√°s cercana\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Opci√≥n A (91025): ‚úÖ Muy cercana al c√°lculo exacto\n‚Ä¢ Opci√≥n B (90025): 1000 menos, error significativo\n‚Ä¢ Opci√≥n C (91125): 100 m√°s, peque√±o error\n‚Ä¢ Opci√≥n D (90684): Valores incorrectos sumados"
          }
        ]
      },
      option_a: '91025',
      option_b: '90025',
      option_c: '91125',
      option_d: '90684',
      correct_option: 0, // A
      explanation: null, // Se maneja en componente
      question_subtype: 'data_tables',
      is_active: true
    };

    // 4. Insertar la pregunta
    console.log('üìù Insertando pregunta de poblaci√≥n Montoro + Coslada 2019...');
    
    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select('id, question_text, option_a, option_b, option_c, option_d, correct_option');

    if (error) {
      console.error('‚ùå Error al insertar pregunta:', error);
      return;
    }

    console.log('‚úÖ Pregunta 17 a√±adida exitosamente');
    console.log('üìù ID:', data[0].id);
    console.log('üìä Pregunta:', data[0].question_text);
    console.log('üéØ Opciones:');
    console.log('   A)', data[0].option_a, '‚Üê CORRECTA');
    console.log('   B)', data[0].option_b);
    console.log('   C)', data[0].option_c);
    console.log('   D)', data[0].option_d);
    console.log('‚úÖ Respuesta correcta: Montoro 2019 (9364) + Coslada 2019 (81661) = 91025');
    console.log('');
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:');
    console.log(`   http://localhost:3000/debug/question/${data[0].id}`);

    return data[0].id;

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

// Ejecutar la funci√≥n
addPoblacionMontoroCosladaQuestion();