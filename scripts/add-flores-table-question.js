import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://yqbpstxowvgipqspqrgo.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxYnBzdHhvd3ZnaXBxc3BxcmdvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDg3NjcwMywiZXhwIjoyMDY2NDUyNzAzfQ.4yUKsfS-enlY6iGICFkKi-HPqNUyTkHczUqc5kgQB3w'

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function addFloresTableQuestion() {
  try {
    // 1. Obtener la categor√≠a "capacidad-administrativa"
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('id, category_key, display_name')
      .eq('category_key', 'capacidad-administrativa')
      .single()
    
    if (categoryError) {
      console.error('‚ùå Error obteniendo categor√≠a:', categoryError)
      return
    }
    console.log('‚úÖ Categor√≠a encontrada:', category.display_name)

    // 2. Obtener la secci√≥n "tablas"
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('id, section_key, display_name')
      .eq('category_id', category.id)
      .eq('section_key', 'tablas')
      .single()
    
    if (sectionError) {
      console.error('‚ùå Error obteniendo secci√≥n:', sectionError)
      return
    }
    console.log('‚úÖ Secci√≥n encontrada:', section.display_name)

    // 3. Preparar datos de las tablas
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Seg√∫n las tablas Flores, ¬øcu√°ntas flores de color rosa est√°n disponibles con entrega a domicilio en ramos de media docena?',
      content_data: {
        tables: [
          {
            title: "TABLA 1: TIPOS DE FLORES Y COLORES",
            headers: ["Flor", "Colores", "Tipos de ramos"],
            rows: [
              ["Margarita", "blanco y amarillo", "3"],
              ["Rosa", "blanco, amarillo y rosa", "6"],
              ["Clavel", "amarillo y rosa", "3 y 6"],
              ["Gardenia", "rosa", "3, 6 y 12"],
              ["Crisantemo", "blanco y rosa", "3, 6 y 12"],
              ["Tulip√°n", "amarillo", "3, 6 y 12"],
              ["Cardo", "blanco", "3"],
              ["Lirio", "blanco y amarillo", "6"],
              ["Orqu√≠dea", "blanco y rosa", "3, 6 y 12"],
              ["Gerbera", "amarillo y rosa", "3 y 6"]
            ]
          },
          {
            title: "TABLA 2: P√âTALOS Y PRECIOS",
            headers: ["Flor", "P√©talos", "Peso grandes", "Estambres", "Precio unidad"],
            rows: [
              ["Margarita", "2", "2", "2", "3"],
              ["Rosa", "4", "5", "4", "3"],
              ["Clavel", "3", "4", "6", "5"],
              ["Gardenia", "1", "4", "3", "2"],
              ["Crisantemo", "4", "4", "6", "5"],
              ["Tulip√°n", "5", "6", "5", "4"],
              ["Cardo", "4", "1", "4", "5"],
              ["Lirio", "3", "5", "6", "4"],
              ["Orqu√≠dea", "4", "6", "8", "3"],
              ["Gerbera", "5", "1", "7", "5"]
            ]
          },
          {
            title: "TABLA 3: DISPONIBILIDAD Y ENTREGA",
            headers: ["Flor", "Fragancia fuerte", "Entrega domicilio", "Presentes", "En jardiner√≠a", "Duradera"],
            rows: [
              ["Margarita", "NO", "S√ç", "NO", "S√ç", "S√ç"],
              ["Rosa", "NO", "NO", "S√ç", "S√ç", "NO"],
              ["Clavel", "S√ç", "NO", "NO", "NO", "S√ç"],
              ["Gardenia", "S√ç", "S√ç", "S√ç", "NO", "NO"],
              ["Crisantemo", "NO", "NO", "S√ç", "S√ç", "NO"],
              ["Tulip√°n", "S√ç", "S√ç", "S√ç", "S√ç", "S√ç"],
              ["Cardo", "NO", "NO", "S√ç", "S√ç", "NO"],
              ["Lirio", "NO", "NO", "NO", "NO", "S√ç"],
              ["Orqu√≠dea", "NO", "S√ç", "S√ç", "S√ç", "NO"],
              ["Gerbera", "S√ç", "NO", "S√ç", "S√ç", "NO"]
            ]
          }
        ],
        operation_type: "cross_reference_multiple_conditions",
        filter_conditions: [
          "Color rosa (Tabla 1)",
          "Entrega a domicilio = S√ç (Tabla 3)",
          "Ramos de media docena = 6 flores (Tabla 1)"
        ],
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de cross-referencing m√∫ltiple: localizar datos espec√≠ficos combinando informaci√≥n de 3 tablas diferentes con m√∫ltiples filtros simult√°neos."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã TABLA 1: Identificar flores con color rosa\n‚úÖ Rosa (colores: blanco, amarillo y rosa) - tiene ramos 6\n‚úÖ Clavel (colores: amarillo y rosa) - tiene ramos 3 y 6\n‚úÖ Gardenia (color: rosa) - tiene ramos 3, 6 y 12\n‚úÖ Crisantemo (colores: blanco y rosa) - tiene ramos 3, 6 y 12\n‚úÖ Orqu√≠dea (colores: blanco y rosa) - tiene ramos 3, 6 y 12\n‚úÖ Gerbera (colores: amarillo y rosa) - tiene ramos 3 y 6\n\nüìã FILTRO: Solo las que tienen ramos de 6 (media docena)\n‚úÖ Rosa, Clavel, Gardenia, Crisantemo, Orqu√≠dea, Gerbera\n\nüìã TABLA 3: De estas, ¬øcu√°les tienen entrega a domicilio = S√ç?\n‚ùå Rosa: NO\n‚ùå Clavel: NO\n‚úÖ Gardenia: S√ç\n‚ùå Crisantemo: NO\n‚úÖ Orqu√≠dea: S√ç\n‚ùå Gerbera: NO"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Filtrado progresivo\n‚Ä¢ Paso 1: Marcar todas las flores rosas en Tabla 1\n‚Ä¢ Paso 2: De estas, seleccionar las que tienen ramos \"6\"\n‚Ä¢ Paso 3: Verificar en Tabla 3 cu√°les tienen \"S√ç\" en entrega\n‚Ä¢ Resultado: 2 flores (Gardenia y Orqu√≠dea)\n\nüìä M√©todo 2: Descarte visual r√°pido\n‚Ä¢ Observar columna \"Entrega domicilio\" en Tabla 3\n‚Ä¢ Solo hay 4 flores con \"S√ç\": Margarita, Gardenia, Tulip√°n, Orqu√≠dea\n‚Ä¢ De estas, verificar cu√°les son rosas en Tabla 1\n‚Ä¢ Descartar: Margarita (blanco/amarillo), Tulip√°n (amarillo)\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Opci√≥n A (3): Imposible, m√°ximo 2 cumplen entrega = S√ç y color rosa\n‚Ä¢ Opci√≥n B (2): ‚úÖ Correcto (Gardenia + Orqu√≠dea)\n‚Ä¢ Opci√≥n C (0): Incorrecto, s√≠ hay flores que cumplen\n‚Ä¢ Opci√≥n D (1): Incorrecto, son m√°s de 1"
          },
          {
            title: "‚ùå Errores comunes a evitar",
            content: "‚Ä¢ Confundir \"media docena\" (6) con \"docena\" (12) o \"3 flores\"\n‚Ä¢ No verificar TODAS las condiciones (rosa + ramos 6 + entrega S√ç)\n‚Ä¢ Leer mal la columna de colores (some tienen m√∫ltiples colores)\n‚Ä¢ No distinguir entre flores que \"pueden ser\" rosas vs \"solo\" rosas\n‚Ä¢ Olvidar que una flor puede tener varios colores simult√°neamente"
          },
          {
            title: "üí™ Consejo de oposici√≥n",
            content: "En tablas complejas, trabaja sistem√°ticamente: 1) Identifica TODAS las condiciones requeridas, 2) Aplica filtros uno por uno marcando con l√°piz, 3) Cuenta solo los que cumplen TODAS las condiciones. Las preguntas de cross-referencing son eliminatorias - la precisi√≥n es m√°s importante que la velocidad."
          }
        ]
      },
      option_a: '3',
      option_b: '2', 
      option_c: '0',
      option_d: '1',
      correct_option: 1, // B = 2
      explanation: null, // Se maneja en componente
      question_subtype: 'data_tables', // Tipo para DataTableQuestion.js
      is_active: true
    }

    // 4. Insertar la pregunta
    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta de flores y tablas a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('‚úÖ Respuesta correcta: B (2 flores: Gardenia y Orqu√≠dea)')
    console.log('‚ôªÔ∏è  Reutiliza el componente DataTableQuestion existente - no se necesitan cambios')
    console.log('')
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)

  } catch (error) {
    console.error('‚ùå Error general:', error)
  }
}

addFloresTableQuestion()