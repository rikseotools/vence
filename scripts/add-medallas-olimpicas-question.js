import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://yqbpstxowvgipqspqrgo.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxYnBzdHhvd3ZnaXBxc3BxcmdvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDg3NjcwMywiZXhwIjoyMDY2NDUyNzAzfQ.4yUKsfS-enlY6iGICFkKi-HPqNUyTkHczUqc5kgQB3w'
);

async function addMedallasOlimpicasQuestion() {
  try {
    console.log('üîç Buscando categor√≠a y secci√≥n...');
    
    // 1. Buscar la categor√≠a 'capacidad-administrativa'
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('id, category_key, display_name')
      .eq('category_key', 'capacidad-administrativa')
      .single();

    if (categoryError || !category) {
      console.error('‚ùå Error al buscar categor√≠a:', categoryError);
      return;
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name);

    // 2. Buscar la secci√≥n 'tablas' dentro de la categor√≠a
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('id, section_key, display_name')
      .eq('category_id', category.id)
      .eq('section_key', 'tablas')
      .single();

    if (sectionError || !section) {
      console.error('‚ùå Error al buscar secci√≥n:', sectionError);
      return;
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name);

    // 3. Datos de la pregunta espec√≠fica de medallas ol√≠mpicas
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Si utiliz√°semos el dato del total de medallas de oro y bronce, ¬øqu√© pa√≠s tendr√≠a la cantidad mayor?',
      content_data: {
        chart_type: 'data_tables',
        chart_title: 'MEDALLAS OL√çMPICAS POR PA√çS',
        question_context: 'Observa la siguiente tabla de medallas ol√≠mpicas y calcula qu√© pa√≠s tiene m√°s medallas de oro y bronce combinadas:',
        tables: [
          {
            title: 'Participaci√≥n y Medallas obtenidas - JJ.OO de verano',
            headers: ['Pa√≠s', 'Participaci√≥n JJ.OO verano', 'Participaci√≥n JJ.OO invierno', 'Oro', 'Plata', 'Bronce', 'Total Medallas'],
            rows: [
              ['Alemania', '17', '12', '239', '267', '291', '797'],
              ['Francia', '29', '24', '231', '256', '285', '772'],
              ['Espa√±a', '24', '21', '48', '72', '49', '169'],
              ['Italia', '28', '24', '222', '195', '215', '632'],
              ['Grecia', '29', '19', '36', '45', '41', '122']
            ],
            highlighted_columns: [3, 5], // Resaltar columnas Oro y Bronce
            footer_note: 'C√°lculo: Oro + Bronce por pa√≠s'
          }
        ],
        operation_type: 'sum_calculation',
        evaluation_description: 'Capacidad de identificar columnas espec√≠ficas en una tabla de datos y realizar operaciones aritm√©ticas simples (suma) con los valores seleccionados',
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de organizaci√≥n y manejo de datos tabulares. Eval√∫a la habilidad para localizar informaci√≥n espec√≠fica en tablas complejas y realizar operaciones matem√°ticas b√°sicas con los datos extra√≠dos."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üîç PASO 1: Identificar las columnas relevantes\n‚Ä¢ 'Oro' (columna 4) y 'Bronce' (columna 6)\n‚Ä¢ Ignorar: Participaci√≥n, Plata, Total Medallas\n\nüìã PASO 2: Extraer datos por pa√≠s\n‚Ä¢ Alemania: 239 oro + 291 bronce\n‚Ä¢ Francia: 231 oro + 285 bronce\n‚Ä¢ Espa√±a: 48 oro + 49 bronce\n‚Ä¢ Italia: 222 oro + 215 bronce\n‚Ä¢ Grecia: 36 oro + 41 bronce\n\nüî¢ PASO 3: Calcular suma para cada pa√≠s\n‚Ä¢ Alemania: 239 + 291 = 530 medallas ‚úÖ\n‚Ä¢ Francia: 231 + 285 = 516 medallas\n‚Ä¢ Espa√±a: 48 + 49 = 97 medallas\n‚Ä¢ Italia: 222 + 215 = 437 medallas\n‚Ä¢ Grecia: 36 + 41 = 77 medallas"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Identificaci√≥n visual r√°pida\n‚Ä¢ Localizar columnas 'Oro' y 'Bronce'\n‚Ä¢ Ignorar datos irrelevantes (Plata, Participaci√≥n)\n‚Ä¢ Sumar mentalmente por filas\n\nüìä M√©todo 2: Comparaci√≥n por aproximaci√≥n\n‚Ä¢ Alemania: ~240 + ~290 = ~530 (el m√°s alto)\n‚Ä¢ Francia: ~230 + ~285 = ~515 (segundo)\n‚Ä¢ Resto claramente menores\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Espa√±a y Grecia: n√∫meros muy bajos, descartables\n‚Ä¢ Italia vs Alemania vs Francia: Alemania tiene mayor oro Y mayor bronce\n‚Ä¢ Opci√≥n C (Alemania): ‚úÖ Correcta por tener ambos valores altos"
          }
        ]
      },
      option_a: 'Italia',
      option_b: 'Francia', 
      option_c: 'Alemania',
      option_d: 'Grecia',
      correct_option: 2, // C - Alemania (530 medallas)
      explanation: null, // Se maneja en componente
      question_subtype: 'data_tables',
      is_active: true
    };

    // 4. Insertar la pregunta
    console.log('üìù Insertando pregunta de medallas ol√≠mpicas...');
    
    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select('id, question_text, option_a, option_b, option_c, option_d, correct_option');

    if (error) {
      console.error('‚ùå Error al insertar pregunta:', error);
      return;
    }

    console.log('‚úÖ Pregunta de medallas ol√≠mpicas a√±adida exitosamente');
    console.log('üìù ID:', data[0].id);
    console.log('üìä Pregunta:', data[0].question_text);
    console.log('üéØ Opciones:');
    console.log('   A)', data[0].option_a);
    console.log('   B)', data[0].option_b);
    console.log('   C)', data[0].option_c, '‚Üê CORRECTA');
    console.log('   D)', data[0].option_d);
    console.log('‚úÖ Respuesta correcta: Alemania (239+291 = 530 medallas de oro y bronce)');
    console.log('');
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:');
    console.log(`   http://localhost:3000/debug/question/${data[0].id}`);

    return data[0].id;

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

// Ejecutar la funci√≥n
addMedallasOlimpicasQuestion();