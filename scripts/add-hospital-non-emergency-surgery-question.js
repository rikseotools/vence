import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertHospitalNonEmergencySurgeryQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Del total de personas atendidas en Hospitales, un 15 % fue por urgencias y un 45 % por intervenciones quir√∫rgicas; ¬øqu√© cantidad de personas no fueron ni por urgencias ni por intervenciones quir√∫rgicas?',
      content_data: {
        categories: ['Centros salud', 'Hospitales', 'Centros especialidades', 'Cl√≠nicas privadas'],
        age_groups: [
          {
            label: "1 mes a 14 a√±os",
            values: [95, 30, 70, 30]
          },
          {
            label: "15-26 a√±os", 
            values: [30, 20, 30, 20]
          },
          {
            label: "27-59 a√±os",
            values: [70, 60, 50, 95]
          },
          {
            label: "60+ a√±os",
            values: [100, 100, 60, 30]
          }
        ],
        chart_title: 'Personas atendidas por rango de edad / lugar de la atenci√≥n (en miles) al mes',
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de leer gr√°ficos de l√≠neas, sumar totales de una categor√≠a espec√≠fica y aplicar c√°lculos de porcentajes para determinar valores restantes."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Total de personas atendidas en Hospitales:\n‚Ä¢ 1-14 a√±os: 30.000 personas\n‚Ä¢ 15-26 a√±os: 20.000 personas\n‚Ä¢ 27-59 a√±os: 60.000 personas\n‚Ä¢ 60+ a√±os: 100.000 personas\n‚Ä¢ Total Hospitales = 30 + 20 + 60 + 100 = 210.000 personas\n\nüìã C√°lculo de porcentajes:\n‚Ä¢ Urgencias: 15% √ó 210.000 = 31.500 personas\n‚Ä¢ Intervenciones quir√∫rgicas: 45% √ó 210.000 = 94.500 personas\n‚Ä¢ Total urgencias + cirug√≠as: 31.500 + 94.500 = 126.000 personas\n\nüìã Personas por otros motivos:\n‚Ä¢ Otros motivos = Total - (Urgencias + Cirug√≠as)\n‚Ä¢ Otros motivos = 210.000 - 126.000 = 84.000 personas\n‚Ä¢ Porcentaje restante: 100% - 15% - 45% = 40% ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: C√°lculo del porcentaje restante\n‚Ä¢ 100% - 15% - 45% = 40%\n‚Ä¢ 40% √ó 210.000 = 84.000 personas ‚úÖ\n\nüìä M√©todo 2: Suma de hospitales y c√°lculo directo\n‚Ä¢ Total hospitales: 30+20+60+100 = 210.000\n‚Ä¢ No urgencias ni cirug√≠as: 210.000 √ó 0,40 = 84.000 ‚úÖ\n\nüí∞ M√©todo 3: Resta de totales\n‚Ä¢ Urgencias + Cirug√≠as: (15%+45%) √ó 210.000 = 126.000\n‚Ä¢ Resto: 210.000 - 126.000 = 84.000 ‚úÖ"
          }
        ]
      },
      option_a: '1.200.000 personas.',
      option_b: '40.000 personas.',
      option_c: '80.000 personas.',
      option_d: '100.000 personas.',
      correct_option: 2, // C = 80.000 personas (aproximadamente 84.000)
      explanation: null,
      question_subtype: 'line_chart',
      difficulty: 'hard',
      time_limit_seconds: 150,
      cognitive_skills: ['chart_reading', 'data_extraction', 'percentage_calculation', 'basic_addition', 'subtraction'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de hospitales sin urgencias ni cirug√≠as...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertHospitalNonEmergencySurgeryQuestion()