import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://yqbpstxowvgipqspqrgo.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxYnBzdHhvd3ZnaXBxc3BxcmdvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDg3NjcwMywiZXhwIjoyMDY2NDUyNzAzfQ.4yUKsfS-enlY6iGICFkKi-HPqNUyTkHczUqc5kgQB3w'
);

async function addDeteccionErroresOrtograficosQuestion() {
  try {
    console.log('üîç Buscando categor√≠a y secci√≥n...');
    
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('id, category_key, display_name')
      .eq('category_key', 'capacidad-ortografica')
      .single();

    if (categoryError || !category) {
      console.error('‚ùå Error al buscar categor√≠a:', categoryError);
      return;
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name);

    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('id, section_key, display_name')
      .eq('category_id', category.id)
      .eq('section_key', 'deteccion_errores')
      .single();

    if (sectionError || !section) {
      console.error('‚ùå Error al buscar secci√≥n:', sectionError);
      return;
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name);

    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Identifica todos los errores ortogr√°ficos en el texto presentado. ¬øCu√°ntos errores ortogr√°ficos encuentras?',
      content_data: {
        chart_type: 'error_detection',
        question_context: 'Identifica todos los errores ortogr√°ficos en el texto presentado:',
        original_text: 'La cegadora luz que proven√≠a de los autom√≥biles no permit√≠a a los ciclistas avanzar la cuesta de la monta√±a.',
        correct_text: 'La cegadora luz que proven√≠a de los autom√≥viles no permit√≠a a los ciclistas avanzar la cuesta de la monta√±a.',
        error_count: 5,
        errors_found: [
          {
            incorrect: 'cegadora',
            correct: 'cegadora',
            position: 3,
            error_type: 'acentuaci√≥n',
            explanation: 'Debe llevar tilde: cegadora'
          },
          {
            incorrect: 'proven√≠a',
            correct: 'proven√≠a',
            position: 8,
            error_type: 'acentuaci√≥n', 
            explanation: 'Debe llevar tilde: proven√≠a'
          },
          {
            incorrect: 'autom√≥biles',
            correct: 'autom√≥viles',
            position: 12,
            error_type: 'acentuaci√≥n',
            explanation: 'Debe llevar tilde: autom√≥viles'
          },
          {
            incorrect: 'permit√≠a',
            correct: 'permit√≠a',
            position: 15,
            error_type: 'acentuaci√≥n',
            explanation: 'Debe llevar tilde: permit√≠a'
          },
          {
            incorrect: 'cuesta',
            correct: 'cuesta',
            position: 21,
            error_type: 'acentuaci√≥n',
            explanation: 'Debe llevar tilde: cuesta'
          }
        ],
        operation_type: 'orthographic_error_count',
        evaluation_description: 'Capacidad de identificar errores ortogr√°ficos de acentuaci√≥n en textos',
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de detecci√≥n de errores ortogr√°ficos. Eval√∫a la habilidad para identificar palabras con acentuaci√≥n incorrecta o faltante en un texto dado."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üîç PASO 1: Leer el texto completo\n‚Ä¢ Identificar todas las palabras del texto\n‚Ä¢ Buscar patrones de acentuaci√≥n\n\nüìã PASO 2: Aplicar reglas de acentuaci√≥n\n‚Ä¢ 'cegadora' ‚Üí palabra llana terminada en vocal ‚Üí NO lleva tilde ‚úó\n‚Ä¢ 'proven√≠a' ‚Üí palabra llana terminada en vocal ‚Üí NO lleva tilde ‚úó\n‚Ä¢ 'autom√≥biles' ‚Üí palabra esdr√∫jula ‚Üí S√ç lleva tilde ‚úó (falta la tilde)\n‚Ä¢ 'permit√≠a' ‚Üí palabra llana terminada en vocal ‚Üí NO lleva tilde ‚úó\n‚Ä¢ 'cuesta' ‚Üí palabra llana terminada en vocal ‚Üí NO lleva tilde ‚úó\n\nüî¢ PASO 3: Contar errores\n‚Ä¢ Total de errores de acentuaci√≥n: 5 palabras ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Reglas b√°sicas de acentuaci√≥n\n‚Ä¢ Agudas: tilde en √∫ltima s√≠laba si terminan en n, s o vocal\n‚Ä¢ Llanas: tilde si NO terminan en n, s o vocal\n‚Ä¢ Esdr√∫julas: SIEMPRE llevan tilde\n\nüìä M√©todo 2: Detecci√≥n visual\n‚Ä¢ Buscar palabras que 'suenan' como necesitan tilde\n‚Ä¢ Palabras con hiato (√≠a, √≠o) suelen llevar tilde\n‚Ä¢ Esdr√∫julas evidentes: autom√≥viles\n\nüí∞ M√©todo 3: Pronunciaci√≥n mental\n‚Ä¢ Pronunciar mentalmente cada palabra\n‚Ä¢ Identificar d√≥nde cae el acento\n‚Ä¢ Verificar si necesita tilde seg√∫n la regla"
          }
        ]
      },
      option_a: '7',
      option_b: '2', 
      option_c: '5',
      option_d: '3',
      correct_option: 2, // C - 5 errores
      explanation: null,
      question_subtype: 'error_detection',
      is_active: true
    };

    console.log('üìù Insertando pregunta de detecci√≥n errores ortogr√°ficos...');
    
    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select('id, question_text, option_a, option_b, option_c, option_d, correct_option');

    if (error) {
      console.error('‚ùå Error al insertar pregunta:', error);
      return;
    }

    console.log('‚úÖ Pregunta de detecci√≥n errores ortogr√°ficos a√±adida exitosamente');
    console.log('üìù ID:', data[0].id);
    console.log('üìä Pregunta:', data[0].question_text);
    console.log('üéØ Opciones:');
    console.log('   A)', data[0].option_a);
    console.log('   B)', data[0].option_b);
    console.log('   C)', data[0].option_c, '‚Üê CORRECTA');
    console.log('   D)', data[0].option_d);
    console.log('‚úÖ Respuesta correcta: 5 errores ortogr√°ficos');
    console.log('');
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:');
    console.log(`   http://localhost:3000/debug/question/${data[0].id}`);

    return data[0].id;

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

addDeteccionErroresOrtograficosQuestion();