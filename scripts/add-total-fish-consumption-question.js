import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertTotalFishConsumptionQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    // Buscar la categor√≠a de capacidad administrativa
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name)

    // Buscar la secci√≥n de gr√°ficos
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name)

    // Datos de la pregunta
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Entre los cuatro a√±os, ¬øQu√© cantidad de Tm. se han consumido de pescado al mes?',
      content_data: {
        chart_type: 'bar_chart',
        chart_title: 'Consumo de alimentos frescos por persona expresado en Kg/mes',
        x_axis_label: 'A√±os',
        y_axis_label: 'Kg/mes',
        question_context: 'Los psicot√©cnicos de capacidad administrativa eval√∫an nuestra capacidad de organizaci√≥n y el manejo de datos. Dicha capacidad administrativa se puede medir a trav√©s de pruebas de atenci√≥n, percepci√≥n o equivalencias. Lo m√°s complejo de este tipo de pruebas es entender correctamente qu√© es lo que se nos est√° pidiendo, puesto que no llegamos a comprender bien la tabla o el gr√°fico que se nos presenta.',
        chart_data: {
          type: 'bar_chart',
          title: 'Consumo de alimentos frescos por persona expresado en Kg/mes',
          quarters: [
            {
              name: 'A√±o 2019',
              frutas: 15,
              pescado: 10,
              verdura: 20
            },
            {
              name: 'A√±o 2020', 
              frutas: 20,
              pescado: 10,
              verdura: 20
            },
            {
              name: 'A√±o 2021',
              frutas: 10,
              pescado: 5,
              verdura: 15
            },
            {
              name: 'A√±o 2022',
              frutas: 5,
              pescado: 5,
              verdura: 10
            }
          ],
          legend: {
            frutas: 'Frutas',
            pescado: 'Pescado',
            verdura: 'Verdura'
          }
        },
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de interpretar gr√°ficos de barras, extraer datos espec√≠ficos de una categor√≠a, realizar sumas b√°sicas y aplicar conversiones de unidades (kg a toneladas). Tambi√©n eval√∫a atenci√≥n al detalle y comprensi√≥n de equivalencias."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Extracci√≥n de datos de pescado por a√±o:\n‚Ä¢ A√±o 2019: 10 kg/mes\n‚Ä¢ A√±o 2020: 10 kg/mes\n‚Ä¢ A√±o 2021: 5 kg/mes\n‚Ä¢ A√±o 2022: 5 kg/mes\n\nüìã Suma total:\n‚Ä¢ Total pescado = 10 + 10 + 5 + 5 = 30 kg/mes\n\nüìã Conversi√≥n a toneladas:\n‚Ä¢ 1 tonelada = 1000 kg\n‚Ä¢ 30 kg √∑ 1000 = 0,03 Tm ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Identificaci√≥n visual\n‚Ä¢ Localiza las barras oscuras (pescado) en cada a√±o\n‚Ä¢ Lee los valores directamente del eje Y\n‚Ä¢ Suma mental: 10 + 10 + 5 + 5 = 30\n\nüìä M√©todo 2: Conversi√≥n r√°pida\n‚Ä¢ Memoriza: dividir kg entre 1000 = toneladas\n‚Ä¢ 30 √∑ 1000 = 0,03 (mover coma 3 posiciones)\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Opci√≥n A: 0,3 Tm - 10 veces mayor ‚ùå\n‚Ä¢ Opci√≥n B: 0,003 Tm - 10 veces menor ‚ùå  \n‚Ä¢ Opci√≥n C: 3 Tm - 100 veces mayor ‚ùå\n‚Ä¢ Opci√≥n D: 0,03 Tm - Conversi√≥n correcta ‚úÖ"
          },
          {
            title: "‚ùå Errores comunes a evitar",
            content: "‚Ä¢ Confundir las series de datos (sumar frutas o verdura en lugar de pescado)\n‚Ä¢ Error en la suma: 10+10+5+5 ‚â† 25 o 35\n‚Ä¢ Error de conversi√≥n: confundir factor 1000 (kg‚ÜíTm)\n‚Ä¢ Leer mal el gr√°fico: confundir colores o leyenda\n‚Ä¢ No entender que pide el TOTAL de los cuatro a√±os"
          },
          {
            title: "üí™ Consejo de oposici√≥n",
            content: "En problemas de conversi√≥n de unidades, siempre verifica tu resultado: ¬ø30 kg de pescado al mes son 0,03 toneladas? S√≠, porque 1 Tm = 1000 kg. Usa la leyenda para identificar correctamente cada serie de datos. Para conversiones r√°pidas: kg√∑1000=Tm (mover coma 3 posiciones a la izquierda)."
          }
        ]
      },
      option_a: '0,3 Tm.',
      option_b: '0,003 Tm.',
      option_c: '3 Tm.',
      option_d: '0,03 Tm.',
      correct_option: 3, // D = 0,03 Tm (30 kg √∑ 1000)
      explanation: null, // Se maneja en el componente
      question_subtype: 'bar_chart', // Tipo para el switch en PsychometricTestLayout
      difficulty: 'medium',
      time_limit_seconds: 120,
      cognitive_skills: ['chart_reading', 'data_extraction', 'unit_conversion', 'basic_addition'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de consumo total de pescado...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta de consumo total de pescado a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('‚úÖ Respuesta correcta: 0,03 Tm (30 kg √∑ 1000)')
    console.log('‚ôªÔ∏è  Reutiliza el componente BarChartQuestion existente - no se necesitan cambios')
    console.log('')
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)
    console.log('')
    console.log('üîó REVISAR DATOS JSON:')
    console.log(`   http://localhost:3000/api/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertTotalFishConsumptionQuestion()