import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertHighestAttendanceLocationQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: '¬øEn qu√© lugar, de los que aparecen en la tabla, se atendi√≥ a mayor n√∫mero de personas?',
      content_data: {
        categories: ['Centros salud', 'Hospitales', 'Centros especialidades', 'Cl√≠nicas privadas'],
        age_groups: [
          {
            label: "1 mes a 14 a√±os",
            values: [95, 30, 70, 30]
          },
          {
            label: "15-26 a√±os", 
            values: [30, 20, 30, 20]
          },
          {
            label: "27-38 a√±os",
            values: [70, 60, 50, 25]
          },
          {
            label: "60+ a√±os",
            values: [100, 100, 90, 30]
          }
        ],
        chart_title: 'Personas atendidas por rango de edad / lugar de la atenci√≥n (en miles) al mes',
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de leer gr√°ficos de l√≠neas con m√∫ltiples series, sumar todas las categor√≠as por lugar de atenci√≥n y determinar el mayor total."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Suma por lugar de atenci√≥n (en miles):\n‚Ä¢ Centros de salud: 95+30+70+100 = 295.000 personas\n‚Ä¢ Hospitales: 30+20+60+100 = 210.000 personas\n‚Ä¢ Centros especialidades: 70+30+50+90 = 240.000 personas\n‚Ä¢ Cl√≠nicas privadas: 30+20+25+30 = 105.000 personas\n\nüìã Comparaci√≥n de totales:\n‚Ä¢ Centros de salud: 295.000 (M√ÅXIMO) ‚úÖ\n‚Ä¢ Hospitales: 210.000\n‚Ä¢ Centros especialidades: 240.000\n‚Ä¢ Cl√≠nicas privadas: 105.000\n\nüìã Conclusi√≥n:\n‚Ä¢ Mayor n√∫mero de personas atendidas: Centros de salud ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Suma por columnas\n‚Ä¢ Centros salud: 95+30+70+100 = 295.000 ‚úÖ\n‚Ä¢ Otros lugares tienen totales menores\n\nüìä M√©todo 2: Comparaci√≥n visual\n‚Ä¢ La l√≠nea verde (Centros salud) est√° consistentemente alta\n‚Ä¢ Sus valores son los mayores en la mayor√≠a de grupos\n‚Ä¢ Total mayor: Centros de salud ‚úÖ\n\nüí∞ M√©todo 3: Identificaci√≥n de m√°ximos\n‚Ä¢ 1-14 a√±os: Centros salud (100) es m√°ximo\n‚Ä¢ 60+ a√±os: Centros salud (100) comparte m√°ximo\n‚Ä¢ Suma total m√°xima: Centros de salud ‚úÖ"
          }
        ]
      },
      option_a: 'Centro especialidades',
      option_b: 'Cl√≠nicas privadas',
      option_c: 'Hospitales',
      option_d: 'Centros de salud',
      correct_option: 3, // D = Centros de salud
      explanation: null,
      question_subtype: 'line_chart',
      difficulty: 'medium',
      time_limit_seconds: 120,
      cognitive_skills: ['chart_reading', 'data_extraction', 'basic_addition', 'comparison', 'total_calculation'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de lugar con mayor atenci√≥n...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertHighestAttendanceLocationQuestion()