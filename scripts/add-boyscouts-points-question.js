import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertBoyscoutsQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    // Buscar la categor√≠a de capacidad administrativa
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name)

    // Buscar la secci√≥n de gr√°ficos
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name)

    // Primero verificar las columnas de la tabla
    console.log('üîç Verificando estructura de la tabla...')
    const { data: existingQuestions } = await supabase
      .from('psychometric_questions')
      .select('*')
      .limit(1)

    console.log('üìã Columnas disponibles:', existingQuestions?.[0] ? Object.keys(existingQuestions[0]) : 'No hay preguntas existentes')

    // Datos de la pregunta (solo campos b√°sicos que seguro existen)
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Un grupo de Boyscouts se va a Navacerrada pasar el verano y deciden hacer equipos para resolver un problema. Tenga en cuenta que el total de puntos que se pueden conseguir es de 500. Teniendo en cuenta que el equipo ganador es el que menos puntuaci√≥n ha obtenido, ¬øcu√°l es el equipo ganador?',
      content_data: {
        chart_data: [
          {"label": "EQUIPO 1", "value": 109, "percentage": 21.8},
          {"label": "EQUIPO 2", "value": 163.5, "percentage": 32.7},
          {"label": "EQUIPO 3", "value": 54.5, "percentage": 10.9},
          {"label": "EQUIPO 4", "value": 172.5, "percentage": 34.5}
        ],
        total_value: 500,
        chart_title: "PUNTOS CONSEGUIDOS",
        question_context: "A continuaci√≥n se presenta un gr√°fico. Deber√° contestar las preguntas que abarcan desde la 11 hasta la 16.",
        evaluation_description: "Interpretaci√≥n de gr√°ficos de sectores y comprensi√≥n de criterios de victoria inversos (menor puntuaci√≥n gana)",
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de interpretar gr√°ficos de sectores y aplicar l√≥gica inversa donde el criterio de 'ganador' es el equipo con MENOR puntuaci√≥n, no mayor."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Datos del gr√°fico:\n‚Ä¢ Equipo 1: 21,8% = 109 puntos ‚ùå\n‚Ä¢ Equipo 2: 32,7% = 163,5 puntos ‚ùå\n‚Ä¢ Equipo 3: 10,9% = 54,5 puntos ‚úÖ (MENOR)\n‚Ä¢ Equipo 4: 34,5% = 172,5 puntos ‚ùå\n\nüìã Criterio de victoria:\n‚Ä¢ El enunciado dice: 'el equipo ganador es el que MENOS puntuaci√≥n ha obtenido'\n‚Ä¢ Equipo 3 tiene la menor puntuaci√≥n: 10,9%"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Identificaci√≥n visual directa\n‚Ä¢ Buscar el sector M√ÅS PEQUE√ëO del gr√°fico\n‚Ä¢ Equipo 3 claramente tiene el sector menor\n‚Ä¢ No necesitas calcular n√∫meros exactos\n\nüìä M√©todo 2: Lectura de porcentajes\n‚Ä¢ Comparar solo los porcentajes mostrados\n‚Ä¢ 10,9% < 21,8% < 32,7% < 34,5%\n‚Ä¢ Equipo 3 = menor porcentaje = ganador\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Opci√≥n A (Equipo 4): 34,5% - el M√ÅS ALTO ‚ùå\n‚Ä¢ Opci√≥n B (Equipo 2): 32,7% - segundo m√°s alto ‚ùå\n‚Ä¢ Opci√≥n C (Equipo 3): 10,9% - el M√ÅS BAJO ‚úÖ\n‚Ä¢ Opci√≥n D (Equipo 1): 21,8% - intermedio ‚ùå"
          },
          {
            title: "‚ùå Errores comunes a evitar",
            content: "‚Ä¢ Elegir el equipo con M√ÅS puntos (leer mal el enunciado)\n‚Ä¢ Confundir 'ganador' con 'mayor puntuaci√≥n'\n‚Ä¢ No leer que es un 'problema' donde menos puntos = mejor\n‚Ä¢ Calcular valores exactos cuando basta comparar porcentajes"
          },
          {
            title: "üí™ Consejo de oposici√≥n",
            content: "En gr√°ficos de sectores, lee SIEMPRE dos veces el criterio de victoria. Palabras clave como 'menos', 'menor', 'problema' indican l√≥gica inversa. Usa la inspecci√≥n visual antes que los c√°lculos."
          }
        ]
      },
      option_a: 'El equipo 4.',
      option_b: 'El equipo 2.',
      option_c: 'El equipo 3.',
      option_d: 'El equipo 1.',
      correct_option: 2, // C = El equipo 3 (menor puntuaci√≥n)
      explanation: null, // Se maneja en el componente
      question_subtype: 'pie_chart', // Tipo para el switch en PsychometricTestLayout
      difficulty: 'medium',
      time_limit_seconds: 120,
      cognitive_skills: ['chart_reading', 'data_comparison', 'logical_reasoning'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de Boyscouts...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta de Boyscouts a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('‚úÖ Respuesta correcta: El equipo 3 (menor puntuaci√≥n: 10,9%)')
    console.log('‚ôªÔ∏è  Reutiliza el componente PieChartQuestion existente - no se necesitan cambios')
    console.log('')
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)
    console.log('')
    console.log('üîó REVISAR DATOS JSON:')
    console.log(`   http://localhost:3000/api/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertBoyscoutsQuestion()