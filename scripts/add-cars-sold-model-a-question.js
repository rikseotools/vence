import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertCarsModelAQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    // Buscar la categor√≠a de capacidad administrativa
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name)

    // Buscar la secci√≥n de gr√°ficos
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name)

    // Datos de la pregunta
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: '¬øCu√°ntos coches se vendieron del modelo A?',
      content_data: {
        chart_type: 'bar_chart',
        chart_title: 'COCHES VENDIDOS POR TRIMESTRE EN EL A√ëO 2023',
        x_axis_label: 'Trimestres',
        y_axis_label: 'N√∫mero de coches vendidos',
        question_context: 'En este tipo de pruebas, se nos presenta un gr√°fico (barras, quesito,...) con datos num√©ricos y se nos plantean, en la mayor√≠a de los casos cuestiones de √≠ndole matem√°tico que hay que resolver con la informaci√≥n que nos aparece en dichos gr√°ficos.',
        chart_data: {
          type: 'bar_chart',
          title: 'COCHES VENDIDOS POR TRIMESTRE EN EL A√ëO 2023',
          quarters: [
            {
              name: 'TRIMESTRE 1',
              modeloA: 24,
              modeloB: 89
            },
            {
              name: 'TRIMESTRE 2', 
              modeloA: 36,
              modeloB: 24
            },
            {
              name: 'TRIMESTRE 3',
              modeloA: 12,
              modeloB: 37
            },
            {
              name: 'TRIMESTRE 4',
              modeloA: 38,
              modeloB: 63
            }
          ],
          legend: {
            modeloA: 'Coche A',
            modeloB: 'Coche B'
          }
        },
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de leer datos de gr√°ficos de barras y realizar sumas b√°sicas para obtener totales por categor√≠as. Habilidad de interpretar leyendas y distinguir entre diferentes series de datos."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Datos del Modelo A por trimestre:\n‚Ä¢ Trimestre 1: 24 coches\n‚Ä¢ Trimestre 2: 36 coches\n‚Ä¢ Trimestre 3: 12 coches\n‚Ä¢ Trimestre 4: 38 coches\n\nüìã C√°lculo del total:\n‚Ä¢ Total Modelo A = 24 + 36 + 12 + 38\n‚Ä¢ Suma paso a paso: 24 + 36 = 60, 60 + 12 = 72, 72 + 38 = 110\n‚Ä¢ Total = 110 coches ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: Suma mental agrupada\n‚Ä¢ Agrupa n√∫meros f√°ciles: (24 + 36) + (12 + 38)\n‚Ä¢ Primera suma: 60, Segunda suma: 50\n‚Ä¢ Total: 60 + 50 = 110\n\nüìä M√©todo 2: Identificaci√≥n visual\n‚Ä¢ Observa las barras naranjas (Modelo A) en cada trimestre\n‚Ä¢ Lee directamente los valores de la tabla inferior\n‚Ä¢ Suma: 24 + 36 + 12 + 38 = 110\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Opci√≥n A: 105 - Muy cercana, verificar c√°lculo ‚ùå\n‚Ä¢ Opci√≥n B: 110 - Resultado del c√°lculo correcto ‚úÖ\n‚Ä¢ Opci√≥n C: 123 - Muy alta ‚ùå\n‚Ä¢ Opci√≥n D: 145 - Demasiado alta ‚ùå"
          },
          {
            title: "‚ùå Errores comunes a evitar",
            content: "‚Ä¢ Confundir las series (sumar Modelo B en lugar de Modelo A)\n‚Ä¢ Leer mal la leyenda o colores del gr√°fico\n‚Ä¢ Errores de suma mental (especialmente con n√∫meros de dos cifras)\n‚Ä¢ Incluir datos de ambos modelos por error\n‚Ä¢ No verificar el resultado con una suma alternativa"
          },
          {
            title: "üí™ Consejo de oposici√≥n",
            content: "En gr√°ficos de barras con m√∫ltiples series, identifica primero qu√© color/patr√≥n corresponde a cada categor√≠a. Usa la tabla de datos cuando est√© disponible para verificar tu lectura visual del gr√°fico. Siempre double-check tu suma mental."
          }
        ]
      },
      option_a: '105',
      option_b: '110',
      option_c: '123',
      option_d: '145',
      correct_option: 1, // B = 110 (24+36+12+38)
      explanation: null, // Se maneja en el componente
      question_subtype: 'bar_chart', // Tipo para el switch en PsychometricTestLayout
      difficulty: 'easy',
      time_limit_seconds: 90,
      cognitive_skills: ['chart_reading', 'data_extraction', 'basic_addition'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de coches modelo A...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta de coches modelo A a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('‚úÖ Respuesta correcta: 110 coches (24+36+12+38)')
    console.log('‚ôªÔ∏è  Reutiliza el componente BarChartQuestion existente - no se necesitan cambios')
    console.log('')
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)
    console.log('')
    console.log('üîó REVISAR DATOS JSON:')
    console.log(`   http://localhost:3000/api/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertCarsModelAQuestion()