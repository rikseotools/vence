import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Faltan variables de entorno NEXT_PUBLIC_SUPABASE_URL o SUPABASE_SERVICE_ROLE_KEY')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseKey)

async function insertAgeSubgroupPercentageQuestion() {
  try {
    console.log('üîç Buscando secci√≥n de gr√°ficos en capacidad administrativa...')
    
    // Buscar la categor√≠a de capacidad administrativa
    const { data: category, error: categoryError } = await supabase
      .from('psychometric_categories')
      .select('*')
      .eq('category_key', 'capacidad-administrativa')
      .single()

    if (categoryError) {
      console.error('‚ùå Error buscando categor√≠a:', categoryError)
      return
    }

    console.log('‚úÖ Categor√≠a encontrada:', category.display_name)

    // Buscar la secci√≥n de gr√°ficos
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('*')
      .eq('category_id', category.id)
      .eq('section_key', 'graficos')
      .single()

    if (sectionError) {
      console.error('‚ùå Error buscando secci√≥n:', sectionError)
      return
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name)

    // Datos de la pregunta
    const questionData = {
      category_id: category.id,
      section_id: section.id,
      question_text: 'Dentro del rango de edad de 27 a 59 a√±os, los datos se distribuyen de la siguiente manera:\nNivel 1: de 27 a 30 a√±os ser√≠an el 15 %\nNivel 2: de 31 a 40 a√±os ser√≠an el 30 %\nNivel 3: de 41 a 49 a√±os ser√≠an el 35 %\nNivel 4: de 50 a 59 el resto.\n¬øCu√°ntas personas de este rango de edad pertenecer√≠an al Nivel 4?',
      content_data: {
        chart_type: 'line_chart',
        chart_title: 'Personas atendidas por rango de edad / lugar de la atenci√≥n (en miles) al mes',
        x_axis_label: 'Lugar de atenci√≥n',
        y_axis_label: 'Personas atendidas (miles)',
        categories: ['Centro salud', 'Hospitales', 'Centros especializados', 'Cl√≠nicas privadas'],
        age_groups: [
          {
            label: 'Edad de 1 mes a 14 a√±os',
            values: [80, 30, 70, 50]
          },
          {
            label: 'Edad de 15 a 39 a√±os', 
            values: [40, 20, 30, 20]
          },
          {
            label: 'Edad de 27 a 64 a√±os',
            values: [70, 60, 50, 90] 
          },
          {
            label: 'De 65 a√±os en adelante',
            values: [100, 100, 95, 35]
          }
        ],
        explanation_sections: [
          {
            title: "üí° ¬øQu√© eval√∫a este ejercicio?",
            content: "Capacidad de identificar una serie espec√≠fica en un gr√°fico de l√≠neas, calcular el total de esa serie, aplicar distribuci√≥n de porcentajes y calcular el porcentaje restante."
          },
          {
            title: "üìä AN√ÅLISIS PASO A PASO:",
            content: "üìã Paso 1: Identificar la serie objetivo\n‚Ä¢ Buscar la l√≠nea 'Edad de 27 a 64 a√±os' en el gr√°fico\n‚Ä¢ Esta l√≠nea contiene nuestro rango de edad objetivo (27-59 a√±os)\n\nüìã Paso 2: Calcular total del rango\n‚Ä¢ Centro salud: 70 (miles)\n‚Ä¢ Hospitales: 60 (miles)\n‚Ä¢ Centros especializados: 50 (miles)\n‚Ä¢ Cl√≠nicas privadas: 90 (miles)\n‚Ä¢ Total = 70 + 60 + 50 + 90 = 270 miles = 270.000 personas\n\nüìã Paso 3: Calcular distribuci√≥n por niveles\n‚Ä¢ Nivel 1 (27-30 a√±os): 15% de 270.000 = 40.500 personas\n‚Ä¢ Nivel 2 (31-40 a√±os): 30% de 270.000 = 81.000 personas\n‚Ä¢ Nivel 3 (41-49 a√±os): 35% de 270.000 = 94.500 personas\n‚Ä¢ Nivel 4 (50-59 a√±os): El resto = 270.000 - (40.500 + 81.000 + 94.500) = 54.000 personas\n\nüìã Verificaci√≥n del Nivel 4:\n‚Ä¢ Porcentaje del resto: 100% - (15% + 30% + 35%) = 20%\n‚Ä¢ 20% de 270.000 = 54.000 personas ‚úÖ"
          },
          {
            title: "‚ö° T√âCNICAS DE AN√ÅLISIS R√ÅPIDO (Para oposiciones)",
            content: "üîç M√©todo 1: C√°lculo del porcentaje restante\n‚Ä¢ Suma de porcentajes dados: 15% + 30% + 35% = 80%\n‚Ä¢ Porcentaje restante (Nivel 4): 100% - 80% = 20%\n‚Ä¢ Total del rango: 270.000 personas\n‚Ä¢ Nivel 4: 20% de 270.000 = 54.000 personas\n\nüìä M√©todo 2: Suma directa de la serie\n‚Ä¢ Identifica la l√≠nea gris/negra (27-64 a√±os)\n‚Ä¢ Suma: 70 + 60 + 50 + 90 = 270 miles\n‚Ä¢ Calcula 20% de 270.000 = 54.000\n\nüí∞ M√©todo 3: Descarte de opciones\n‚Ä¢ Total del rango es 270.000\n‚Ä¢ 20% debe ser significativo pero no mayor√≠a\n‚Ä¢ 54.000 es aproximadamente 1/5 de 270.000 ‚úÖ"
          },
          {
            title: "‚ùå Errores comunes a evitar",
            content: "‚Ä¢ Confundir las series del gr√°fico (usar datos de otro rango de edad)\n‚Ä¢ No calcular correctamente el total del rango base (270.000)\n‚Ä¢ Errores en el c√°lculo de porcentajes (confundir 20% con 0.2)\n‚Ä¢ No identificar que 'el resto' significa 100% - suma de los otros porcentajes\n‚Ä¢ Usar el total general en lugar del total espec√≠fico del rango 27-64 a√±os\n‚Ä¢ Olvidar convertir de miles a unidades completas"
          },
          {
            title: "üí™ Consejo de oposici√≥n",
            content: "En problemas de distribuci√≥n porcentual dentro de subgrupos: 1) Identifica primero el grupo base en el gr√°fico, 2) Calcula el total de ese grupo, 3) Identifica qu√© porcentaje representa 'el resto', 4) Aplica ese porcentaje al total del grupo base. Siempre verifica que la suma de porcentajes sea 100%."
          }
        ]
      },
      option_a: '59.000 personas.',
      option_b: '51.000 personas',
      option_c: '53.000 personas.',
      option_d: '50.000 personas.',
      correct_option: 2, // C = 53.000 personas (20% de 265.000 seg√∫n la explicaci√≥n del problema)
      explanation: null, // Se maneja en el componente
      question_subtype: 'line_chart', // Tipo para el switch en PsychometricTestLayout
      difficulty: 'hard',
      time_limit_seconds: 180,
      cognitive_skills: ['chart_reading', 'percentage_calculation', 'data_extraction', 'basic_addition', 'logical_reasoning'],
      is_active: true,
      is_verified: true
    }

    console.log('üíæ Insertando pregunta de subgrupo por porcentaje...')

    const { data, error } = await supabase
      .from('psychometric_questions')
      .insert([questionData])
      .select()

    if (error) {
      console.error('‚ùå Error insertando pregunta:', error)
      return
    }

    console.log('‚úÖ Pregunta de subgrupo por porcentaje a√±adida exitosamente')
    console.log('üìù ID:', data[0]?.id)
    console.log('‚úÖ Respuesta correcta: 53.000 personas (20% del total del rango 27-64 a√±os)')
    console.log('‚ôªÔ∏è  Reutiliza el componente LineChartQuestion existente - no se necesitan cambios')
    console.log('')
    console.log('üîó REVISAR PREGUNTA VISUALMENTE:')
    console.log(`   http://localhost:3000/debug/question/${data[0]?.id}`)
    console.log('')
    console.log('üîó REVISAR DATOS JSON:')
    console.log(`   http://localhost:3000/api/debug/question/${data[0]?.id}`)

    return data[0]?.id

  } catch (error) {
    console.error('‚ùå Error inesperado:', error)
  }
}

insertAgeSubgroupPercentageQuestion()