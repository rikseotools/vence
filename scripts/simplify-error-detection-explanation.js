import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://yqbpstxowvgipqspqrgo.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxYnBzdHhvd3ZnaXBxc3BxcmdvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDg3NjcwMywiZXhwIjoyMDY2NDUyNzAzfQ.4yUKsfS-enlY6iGICFkKi-HPqNUyTkHczUqc5kgQB3w'
);

async function simplifyErrorDetectionExplanation() {
  try {
    console.log('üìù Simplificando explicaci√≥n de detecci√≥n de errores ortogr√°ficos...');
    
    // Buscar la pregunta existente
    const { data: questions, error: searchError } = await supabase
      .from('psychometric_questions')
      .select('id, content_data')
      .eq('question_subtype', 'error_detection');

    if (searchError) {
      console.error('‚ùå Error al buscar pregunta:', searchError);
      return;
    }

    if (!questions || questions.length === 0) {
      console.log('‚ö†Ô∏è No se encontr√≥ pregunta de detecci√≥n de errores');
      return;
    }

    // Nueva explicaci√≥n did√°ctica y simple
    const newExplanationSections = [
      {
        title: "üìù An√°lisis del texto:",
        content: "En la frase 'La cegadora luz que proven√≠a de los autom√≥biles no permit√≠a a los ciclistas avanzar la cuesta de la monta√±a' encontramos los siguientes errores:\n\n‚Ä¢ cegadora ‚Üí cegadora (No lleva tilde - palabra llana terminada en vocal)\n‚Ä¢ proven√≠a ‚Üí proven√≠a (No lleva tilde - palabra llana terminada en vocal)\n‚Ä¢ autom√≥biles ‚Üí autom√≥viles (S√≠ lleva tilde - palabra esdr√∫jula)\n‚Ä¢ permit√≠a ‚Üí permit√≠a (No lleva tilde - palabra llana terminada en vocal)\n‚Ä¢ cuesta ‚Üí cuesta (No lleva tilde - palabra llana terminada en vocal)\n\nEn este caso, todas las palabras est√°n correctamente escritas.\nRespuesta: 0 errores ortogr√°ficos."
      }
    ];

    // Actualizar cada pregunta
    for (const question of questions) {
      console.log(`üìù Actualizando explicaci√≥n de pregunta ID: ${question.id}`);
      
      const updatedContentData = { 
        ...question.content_data,
        explanation_sections: newExplanationSections
      };
      
      const { error: updateError } = await supabase
        .from('psychometric_questions')
        .update({
          content_data: updatedContentData
        })
        .eq('id', question.id);

      if (updateError) {
        console.error(`‚ùå Error al actualizar pregunta ${question.id}:`, updateError);
      } else {
        console.log(`‚úÖ Explicaci√≥n simplificada para pregunta ${question.id}`);
      }
    }

    console.log('‚úÖ Proceso completado - Explicaci√≥n simplificada y did√°ctica');

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

simplifyErrorDetectionExplanation();