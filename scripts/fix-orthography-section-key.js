import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  'https://yqbpstxowvgipqspqrgo.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlxYnBzdHhvd3ZnaXBxc3BxcmdvIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MDg3NjcwMywiZXhwIjoyMDY2NDUyNzAzfQ.4yUKsfS-enlY6iGICFkKi-HPqNUyTkHczUqc5kgQB3w'
);

async function fixOrthographySectionKey() {
  try {
    console.log('üîß Corrigiendo section_key de deteccion_errores ‚Üí ortografia...');
    
    // Buscar la secci√≥n actual
    const { data: section, error: sectionError } = await supabase
      .from('psychometric_sections')
      .select('id, section_key, display_name, category_id')
      .eq('section_key', 'deteccion_errores')
      .single();

    if (sectionError || !section) {
      console.error('‚ùå Error al buscar secci√≥n deteccion_errores:', sectionError);
      return;
    }

    console.log('‚úÖ Secci√≥n encontrada:', section.display_name);

    // Cambiar el section_key a 'ortografia'
    const { error: updateError } = await supabase
      .from('psychometric_sections')
      .update({
        section_key: 'ortografia',
        display_name: 'Ortograf√≠a'
      })
      .eq('id', section.id);

    if (updateError) {
      console.error('‚ùå Error al actualizar secci√≥n:', updateError);
      return;
    }

    console.log('‚úÖ Secci√≥n actualizada exitosamente');
    console.log('üìù section_key: deteccion_errores ‚Üí ortografia');
    console.log('üìù display_name: Detecci√≥n de errores ‚Üí Ortograf√≠a');

    // Verificar que las preguntas siguen asociadas correctamente
    const { data: questions, error: questionsError } = await supabase
      .from('psychometric_questions')
      .select('id, question_text')
      .eq('section_id', section.id);

    if (questionsError) {
      console.error('‚ùå Error al verificar preguntas:', questionsError);
      return;
    }

    console.log(`\nüìä Preguntas asociadas a esta secci√≥n: ${questions?.length || 0}`);
    questions?.forEach((question, index) => {
      console.log(`${index + 1}. ${question.question_text.substring(0, 60)}...`);
    });

    console.log('\n‚úÖ Proceso completado - Ahora la secci√≥n deber√≠a aparecer como "Ortograf√≠a" en la UI');

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

fixOrthographySectionKey();